// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QueryLoadingEntityFramework;

#nullable disable

namespace QueryLoadingEntityFramework.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QueryLoadingEntityFramework.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Email = "john.doe@example.com",
                            FirstName = "John",
                            LastName = "Doe"
                        },
                        new
                        {
                            CustomerId = 2,
                            Email = "jane.smith@example.com",
                            FirstName = "Jane",
                            LastName = "Smith"
                        },
                        new
                        {
                            CustomerId = 3,
                            Email = "emily.johnson@example.com",
                            FirstName = "Emily",
                            LastName = "Johnson"
                        },
                        new
                        {
                            CustomerId = 4,
                            Email = "william.brown@example.com",
                            FirstName = "William",
                            LastName = "Brown"
                        },
                        new
                        {
                            CustomerId = 5,
                            Email = "sophia.williams@example.com",
                            FirstName = "Sophia",
                            LastName = "Williams"
                        });
                });

            modelBuilder.Entity("QueryLoadingEntityFramework.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            CustomerId = 1,
                            OrderDate = new DateTime(2024, 4, 17, 15, 32, 44, 908, DateTimeKind.Local).AddTicks(1133)
                        },
                        new
                        {
                            OrderId = 2,
                            CustomerId = 2,
                            OrderDate = new DateTime(2024, 4, 18, 15, 32, 44, 908, DateTimeKind.Local).AddTicks(1151)
                        },
                        new
                        {
                            OrderId = 3,
                            CustomerId = 3,
                            OrderDate = new DateTime(2024, 4, 19, 15, 32, 44, 908, DateTimeKind.Local).AddTicks(1152)
                        },
                        new
                        {
                            OrderId = 4,
                            CustomerId = 4,
                            OrderDate = new DateTime(2024, 4, 20, 15, 32, 44, 908, DateTimeKind.Local).AddTicks(1153)
                        },
                        new
                        {
                            OrderId = 5,
                            CustomerId = 5,
                            OrderDate = new DateTime(2024, 4, 21, 15, 32, 44, 908, DateTimeKind.Local).AddTicks(1153)
                        },
                        new
                        {
                            OrderId = 6,
                            CustomerId = 1,
                            OrderDate = new DateTime(2024, 4, 17, 15, 32, 44, 908, DateTimeKind.Local).AddTicks(1154)
                        },
                        new
                        {
                            OrderId = 7,
                            CustomerId = 2,
                            OrderDate = new DateTime(2024, 4, 18, 15, 32, 44, 908, DateTimeKind.Local).AddTicks(1155)
                        },
                        new
                        {
                            OrderId = 8,
                            CustomerId = 2,
                            OrderDate = new DateTime(2024, 4, 19, 15, 32, 44, 908, DateTimeKind.Local).AddTicks(1156)
                        },
                        new
                        {
                            OrderId = 9,
                            CustomerId = 4,
                            OrderDate = new DateTime(2024, 4, 20, 15, 32, 44, 908, DateTimeKind.Local).AddTicks(1157)
                        },
                        new
                        {
                            OrderId = 10,
                            CustomerId = 3,
                            OrderDate = new DateTime(2024, 4, 21, 15, 32, 44, 908, DateTimeKind.Local).AddTicks(1158)
                        });
                });

            modelBuilder.Entity("QueryLoadingEntityFramework.Entities.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            OrderDetailId = 1,
                            OrderId = 1,
                            Price = 10.5m,
                            ProductName = "Product1"
                        },
                        new
                        {
                            OrderDetailId = 2,
                            OrderId = 1,
                            Price = 20.5m,
                            ProductName = "Product2"
                        },
                        new
                        {
                            OrderDetailId = 3,
                            OrderId = 2,
                            Price = 30.5m,
                            ProductName = "Product3"
                        },
                        new
                        {
                            OrderDetailId = 4,
                            OrderId = 2,
                            Price = 40.5m,
                            ProductName = "Product4"
                        },
                        new
                        {
                            OrderDetailId = 5,
                            OrderId = 3,
                            Price = 50.5m,
                            ProductName = "Product5"
                        },
                        new
                        {
                            OrderDetailId = 6,
                            OrderId = 4,
                            Price = 60.5m,
                            ProductName = "Product6"
                        },
                        new
                        {
                            OrderDetailId = 7,
                            OrderId = 5,
                            Price = 70.5m,
                            ProductName = "Product7"
                        },
                        new
                        {
                            OrderDetailId = 8,
                            OrderId = 2,
                            Price = 65.5m,
                            ProductName = "Product8"
                        },
                        new
                        {
                            OrderDetailId = 9,
                            OrderId = 2,
                            Price = 40.5m,
                            ProductName = "Product9"
                        },
                        new
                        {
                            OrderDetailId = 10,
                            OrderId = 3,
                            Price = 54.5m,
                            ProductName = "Product10"
                        },
                        new
                        {
                            OrderDetailId = 11,
                            OrderId = 4,
                            Price = 78.5m,
                            ProductName = "Product11"
                        },
                        new
                        {
                            OrderDetailId = 12,
                            OrderId = 5,
                            Price = 70.5m,
                            ProductName = "Product12"
                        });
                });

            modelBuilder.Entity("QueryLoadingEntityFramework.Entities.Order", b =>
                {
                    b.HasOne("QueryLoadingEntityFramework.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("QueryLoadingEntityFramework.Entities.OrderDetail", b =>
                {
                    b.HasOne("QueryLoadingEntityFramework.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("QueryLoadingEntityFramework.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("QueryLoadingEntityFramework.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
